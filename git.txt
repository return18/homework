1.下载git
2.配置文件
01.用户信息git config --global user.name "runoob"  git config --global user.email test@runoob.com
02.文件编辑器 git config --global core.editor emacs
03.差异分析工具git config --global merge.tool vimdiff
04.查看配置信息git config --list
3.工作流程
01.克隆 Git 资源作为工作目录。
02.在克隆的资源上添加或修改文件。
03.如果其他人修改了，你可以更新资源。
04.在提交前查看修改。
05.提交修改。
06.在修改完成后，如果发现错误，可以撤回提交并再次修改并提交。
4.创建仓库
01.git init 生成一个 .git 目录(隐藏)。
02.使用我们指定目录作为Git仓库 生成一个.git
----------------------------------------------------------
4.基本操作
01.mkdir 目录
02.cd 目录
03. git init
5.查看文件 ls -a
5.基本快照
01.git add
02.git status -s
03.git diff(缓存)
04.git commit -m ''  git commit -a  git commit -am '' 
05.git status
06.git reset HEAD 命令用于取消已缓存的内容。
07.git rm <file>
08.git rm -f <file>
09.git rm --cached <file>
10.git mv README  README.md   -r
-------------------------------------------
6.如何使用git忽略一下不想上传的文件
01.创建文件touch .gitignore
7.分支管理
01.git branch (branchname)主
02.git checkout (branchname)
03.git merge 合并    git merge newtest
--------------------------
04.列出分支  git branch
05. git checkout -b (branchname) 
06删除分支git branch -d (branchname)
07.合并冲突
8.Git 查看提交历史 git log
01.可以用 --oneline 选项来查看历史记录的简洁的版本
02.用 --graph 选项，查看历史中什么时候出现了分支、合并。以下为相同的命令，开启了拓扑图选项
03.更清楚明了地看到何时工作分叉、又何时归并git log --reverse --oneline
04.查找指定用户的提交日志可以使用命令git log --author=Linus --oneline -5
05.指定日期，可以执行几个选项：--since 和 --before，但是你也可以用 --until 和 --after
06.要看 Git 项目中三周前且在四月十八日之后的所有提交，我可以执行这个（我还用了 --no-merges 选项以隐藏合并提交）
git log --oneline --before={3.weeks.ago} --after={2010-04-18} --no-merges
9.标签git tag -a v1.0 
---------------
10.远程仓库
01.注册
02.git remote
03.git remote add origin https://github.com/return18/homework.git
04.git remote
05.git push -u origin master
06.创建一个README.md







